{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/Loading.js","components/GifGrid.js","components/GifExpertApp.js","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","category","a","urlGifs","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","GifGridItem","image","src","alt","Loading","GifGrid","GifExpertApp","categories","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.985d97cd.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const InputValueChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <div className=\"campo\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ InputValueChange }\r\n                />\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\n\r\n// encodeURI elimina espacios, etc\r\nexport const getGifs = async (category) => {\r\n    const urlGifs = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=12&api_key=VmL4NRzy1ofB3JUYRLD8kk3BGvJ1nCGU`;\r\n    const resp = await fetch(urlGifs);\r\n\r\n    // const resultado = await resp.json();\r\n    // console.log(resultado)\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url, // ? si viene las imgs entonces lo utilice\r\n        }\r\n    })\r\n\r\n\r\n    return gifs;\r\n\r\n    // console.log(gifs)\r\n    // setImages(gifs)\r\n}","import {useState, useEffect} from 'react';\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    // Estado\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    console.log(imgs)\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n                }, 1500)\r\n\r\n            })\r\n    }, [category]);\r\n\r\n\r\n    // Return\r\n    return state; // { data[], loading: true }\r\n\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\n\r\nfunction GifGridItem({ image }) {\r\n\r\n    const {title, url} = image;\r\n\r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    // data:images - alias\r\n    const {data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"heading-category animate__animated animate__fadeIn\">Buscando - {category} </h3>\r\n\r\n            { loading && <Loading/> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(image => (\r\n                        <GifGridItem\r\n                            key={image.id}\r\n                            image={image}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, {useState} from 'react';\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [ categories, setCategories ] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //\r\n    //     // creamos una copia de las categories y aÃ±adimos una nueva\r\n    //     setCategories([...categories, 'HunterXHunter']);\r\n    //     // setCategories(cats => [...cats, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"contenedor\">\r\n            <h2 className=\"gif-app\">GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            {\r\n                categories.map(category => (\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport GifExpertApp from \"./components/GifExpertApp\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <GifExpertApp />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}